{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 60, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/app/api/check-link/route.ts"],"sourcesContent":["import { NextRequest, NextResponse } from 'next/server'\n\nexport async function POST(request: NextRequest) {\n  try {\n    const { url } = await request.json()\n    \n    if (!url) {\n      return NextResponse.json(\n        { error: 'URL é obrigatória' },\n        { status: 400 }\n      )\n    }\n\n    // Validate URL format\n    try {\n      new URL(url)\n    } catch {\n      return NextResponse.json(\n        { online: false, error: 'URL inválida' },\n        { status: 200 }\n      )\n    }\n\n    // Set timeout for the request\n    const controller = new AbortController()\n    const timeoutId = setTimeout(() => controller.abort(), 10000) // 10 second timeout\n\n    try {\n      // Make HEAD request to check if the URL is accessible\n      const response = await fetch(url, {\n        method: 'HEAD',\n        signal: controller.signal,\n        headers: {\n          'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/91.0.4472.124 Safari/537.36'\n        }\n      })\n\n      clearTimeout(timeoutId)\n\n      // Consider the link online if status is in 200-399 range\n      const isOnline = response.status >= 200 && response.status < 400\n\n      return NextResponse.json({\n        online: isOnline,\n        status: response.status,\n        statusText: response.statusText\n      })\n\n    } catch (error) {\n      clearTimeout(timeoutId)\n      \n      // If HEAD fails, try GET request with limited data\n      try {\n        const getController = new AbortController()\n        const getTimeoutId = setTimeout(() => getController.abort(), 8000) // 8 second timeout\n        \n        const getResponse = await fetch(url, {\n          method: 'GET',\n          signal: getController.signal,\n          headers: {\n            'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/91.0.4472.124 Safari/537.36',\n            'Range': 'bytes=0-1023' // Only get first 1KB\n          }\n        })\n\n        clearTimeout(getTimeoutId)\n\n        const isOnline = getResponse.status >= 200 && getResponse.status < 400\n\n        return NextResponse.json({\n          online: isOnline,\n          status: getResponse.status,\n          statusText: getResponse.statusText\n        })\n\n      } catch (getError) {\n        // Both HEAD and GET failed\n        return NextResponse.json({\n          online: false,\n          error: 'Não foi possível conectar ao servidor'\n        })\n      }\n    }\n\n  } catch (error) {\n    console.error('Error checking link:', error)\n    return NextResponse.json(\n      { error: 'Erro interno do servidor' },\n      { status: 500 }\n    )\n  }\n}\n\n// Handle CORS for development\nexport async function OPTIONS(request: NextRequest) {\n  return new NextResponse(null, {\n    status: 200,\n    headers: {\n      'Access-Control-Allow-Origin': '*',\n      'Access-Control-Allow-Methods': 'POST, OPTIONS',\n      'Access-Control-Allow-Headers': 'Content-Type',\n    },\n  })\n}\n"],"names":[],"mappings":";;;;AAAA;;AAEO,eAAe,KAAK,OAAoB;IAC7C,IAAI;QACF,MAAM,EAAE,GAAG,EAAE,GAAG,MAAM,QAAQ,IAAI;QAElC,IAAI,CAAC,KAAK;YACR,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CACtB;gBAAE,OAAO;YAAoB,GAC7B;gBAAE,QAAQ;YAAI;QAElB;QAEA,sBAAsB;QACtB,IAAI;YACF,IAAI,IAAI;QACV,EAAE,OAAM;YACN,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CACtB;gBAAE,QAAQ;gBAAO,OAAO;YAAe,GACvC;gBAAE,QAAQ;YAAI;QAElB;QAEA,8BAA8B;QAC9B,MAAM,aAAa,IAAI;QACvB,MAAM,YAAY,WAAW,IAAM,WAAW,KAAK,IAAI,OAAO,oBAAoB;;QAElF,IAAI;YACF,sDAAsD;YACtD,MAAM,WAAW,MAAM,MAAM,KAAK;gBAChC,QAAQ;gBACR,QAAQ,WAAW,MAAM;gBACzB,SAAS;oBACP,cAAc;gBAChB;YACF;YAEA,aAAa;YAEb,yDAAyD;YACzD,MAAM,WAAW,SAAS,MAAM,IAAI,OAAO,SAAS,MAAM,GAAG;YAE7D,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;gBACvB,QAAQ;gBACR,QAAQ,SAAS,MAAM;gBACvB,YAAY,SAAS,UAAU;YACjC;QAEF,EAAE,OAAO,OAAO;YACd,aAAa;YAEb,mDAAmD;YACnD,IAAI;gBACF,MAAM,gBAAgB,IAAI;gBAC1B,MAAM,eAAe,WAAW,IAAM,cAAc,KAAK,IAAI,MAAM,mBAAmB;;gBAEtF,MAAM,cAAc,MAAM,MAAM,KAAK;oBACnC,QAAQ;oBACR,QAAQ,cAAc,MAAM;oBAC5B,SAAS;wBACP,cAAc;wBACd,SAAS,eAAe,qBAAqB;oBAC/C;gBACF;gBAEA,aAAa;gBAEb,MAAM,WAAW,YAAY,MAAM,IAAI,OAAO,YAAY,MAAM,GAAG;gBAEnE,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;oBACvB,QAAQ;oBACR,QAAQ,YAAY,MAAM;oBAC1B,YAAY,YAAY,UAAU;gBACpC;YAEF,EAAE,OAAO,UAAU;gBACjB,2BAA2B;gBAC3B,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;oBACvB,QAAQ;oBACR,OAAO;gBACT;YACF;QACF;IAEF,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,wBAAwB;QACtC,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CACtB;YAAE,OAAO;QAA2B,GACpC;YAAE,QAAQ;QAAI;IAElB;AACF;AAGO,eAAe,QAAQ,OAAoB;IAChD,OAAO,IAAI,gIAAA,CAAA,eAAY,CAAC,MAAM;QAC5B,QAAQ;QACR,SAAS;YACP,+BAA+B;YAC/B,gCAAgC;YAChC,gCAAgC;QAClC;IACF;AACF","debugId":null}}]
}